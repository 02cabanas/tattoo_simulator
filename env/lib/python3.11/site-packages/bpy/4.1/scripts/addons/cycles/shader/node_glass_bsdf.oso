OpenShadingLanguage 1.00
# Compiled by oslc 1.13.7.0dev
# options: -q -O2 -I/Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders -I/Users/blender/git/blender-v410/blender.git/lib/macos_arm64/osl/share/OSL/shaders -o /Users/blender/git/blender-v410/build_arm64_release/intern/cycles/kernel/osl/shaders/node_glass_bsdf.oso
shader node_glass_bsdf
param	color	Color	0.800000012 0.800000012 0.800000012		%read{14,14} %write{2147483647,-1}
param	string	distribution	"ggx"		%read{14,14} %write{2147483647,-1}
param	float	Roughness	0.200000003		%read{1,1} %write{2147483647,-1}
param	float	IOR	1.45000005		%read{2,2} %write{2147483647,-1}
param	normal	Normal	0 0 0		%read{14,14} %write{0,0} %initexpr
oparam	closure color	BSDF			%read{2147483647,-1} %write{14,14}
global	normal	N	%read{0,0} %write{2147483647,-1}
local	float	___348_f0	%read{10,10} %write{9,9}
local	float	r2	%read{14,14} %write{1,1}
local	float	eta	%read{5,13} %write{2,5}
local	color	F0	%read{14,14} %write{11,11}
local	color	F90	%read{14,14} %write{12,12}
const	float	$const1	9.99999975e-06		%read{2,2} %write{2147483647,-1}
temp	int	$tmp1	%read{4,4} %write{3,3}
const	float	$const2	1		%read{5,8} %write{2147483647,-1}
temp	float	$tmp2	%read{11,11} %write{10,10}
const	string	$const3	"F0_from_ior"		%read{6,6} %write{2147483647,-1}
temp	float	$tmp3	%read{9,9} %write{7,7}
temp	float	$tmp4	%read{9,9} %write{8,8}
const	color	$const4	1 1 1		%read{12,12} %write{2147483647,-1}
const	vector	$const5	0 0 0		%read{14,14} %write{2147483647,-1}
temp	float	$tmp6	%read{14,14} %write{13,13}
const	string	$const6	"generalized_schlick_bsdf"		%read{14,14} %write{2147483647,-1}
code Normal
# /Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_glass_bsdf.osl:12
#                        normal Normal = N,
	assign		Normal N 	%filename{"/Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_glass_bsdf.osl"} %line{12} %argrw{"wr"}
code ___main___
# /Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_glass_bsdf.osl:15
#   float r2 = Roughness * Roughness;
	mul		r2 Roughness Roughness 	%filename{"/Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_glass_bsdf.osl"} %line{15} %argrw{"wrr"}
# /Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_glass_bsdf.osl:16
#   float eta = max(IOR, 1e-5);
	max		eta IOR $const1 	%line{16} %argrw{"wrr"}
# /Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_glass_bsdf.osl:17
#   eta = backfacing() ? 1.0 / eta : eta;
	backfacing	$tmp1 	%line{17} %argrw{"w"}
	if		$tmp1 6 6 	%argrw{"r"}
	div		eta $const2 eta 	%argrw{"wrr"}
# /Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_glass_bsdf.osl:18
#   color F0 = F0_from_ior(eta);
	functioncall	$const3 11 	%line{18} %argrw{"r"}
# /Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_fresnel.h:42
#   float f0 = (eta - 1.0) / (eta + 1.0);
	sub		$tmp3 eta $const2 	%filename{"/Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_fresnel.h"} %line{42} %argrw{"wrr"}
	add		$tmp4 eta $const2 	%argrw{"wrr"}
	div		___348_f0 $tmp3 $tmp4 	%argrw{"wrr"}
# /Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_fresnel.h:43
#   return f0 * f0;
	mul		$tmp2 ___348_f0 ___348_f0 	%line{43} %argrw{"wrr"}
# /Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_glass_bsdf.osl:18
#   color F0 = F0_from_ior(eta);
	assign		F0 $tmp2 	%filename{"/Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_glass_bsdf.osl"} %line{18} %argrw{"wr"}
# /Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_glass_bsdf.osl:19
#   color F90 = color(1.0);
	assign		F90 $const4 	%line{19} %argrw{"wr"}
# /Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_glass_bsdf.osl:22
#       Normal, vector(0.0), Color, Color, r2, r2, F0, F90, -eta, distribution);
	neg		$tmp6 eta 	%line{22} %argrw{"wr"}
# /Users/blender/git/blender-v410/blender.git/intern/cycles/kernel/osl/shaders/node_glass_bsdf.osl:21
#   BSDF = generalized_schlick_bsdf(
	closure		BSDF $const6 Normal $const5 Color Color r2 r2 F0 F90 $tmp6 distribution 	%line{21} %argrw{"wrrrrrrrrrrr"}
	end
